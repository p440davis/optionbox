{"version":3,"file":"optionbox.0.1.0.min.js","sources":["../src/modules/persist.js","../src/modules/update.js","../src/modules/load.js","../src/modules/setup.js","../src/optionbox.js"],"sourcesContent":["const persist = {\r\n    storageExists: typeof (Storage) !== \"undefined\" ? true : false,\r\n\r\n    key(name) {\r\n        return \"optionbox-\" + name;\r\n    },\r\n\r\n    store(name, value) {\r\n        if (this.storageExists) {\r\n            sessionStorage.setItem(this.key(name), value);\r\n        }\r\n    },\r\n\r\n    remove(name) {\r\n        if (this.storageExists) {\r\n            sessionStorage.removeItem(this.key(name));\r\n        }\r\n    },\r\n\r\n    get(name) {\r\n        if (this.storageExists) {\r\n            return sessionStorage.getItem(this.key(name));\r\n        }\r\n    }\r\n};\r\n\r\nexport { persist };","import { persist } from \"./persist.js\";\r\n\r\nconst update = {\r\n    listen(radios, persistable) {\r\n        [].forEach.call(radios, radio => {\r\n            radio.onclick = () => {\r\n                this.change(radio, persistable);\r\n            };\r\n        });\r\n    },\r\n\r\n    change(radio, persistable) {\r\n        let name = radio.dataset.optionboxName;\r\n        let value = radio.dataset.optionboxValue;\r\n        let optionItem = radio.closest(\".optionbox-item\");\r\n        let optionBox = radio.closest(\".optionbox\");\r\n        let optionSiblings = optionBox.querySelectorAll(\r\n            \".optionbox-radio:not(:checked)\"\r\n        );\r\n\r\n        let select = document.querySelector(`[name=${name}]`);\r\n\r\n        if (select.value != value) {\r\n            // select if not previously selected\r\n            select.value = value;\r\n            radio.checked = true;\r\n            if (persistable) {\r\n                persist.store(select.name, select.value);\r\n            }\r\n            this.close(optionItem, optionBox, optionSiblings);\r\n        } else {\r\n            // deselect if previously selected\r\n            select.selectedIndex = -1;\r\n            radio.checked = false;\r\n            persist.remove(select.name);\r\n            this.open(optionItem, optionBox);\r\n        }\r\n    },\r\n\r\n    close(optionItem, optionBox, optionSiblings) {\r\n        optionItem.classList.add(\"selected\");\r\n        optionBox.classList.add(\"closed\");\r\n        [].forEach.call(optionSiblings, sibling =>\r\n            sibling.closest(\"label\").classList.remove(\"selected\")\r\n        );\r\n    },\r\n\r\n    open(optionItem, optionBox) {\r\n        optionItem.classList.remove(\"selected\");\r\n        optionBox.classList.remove(\"closed\");\r\n    }\r\n};\r\n\r\nexport { update };","import { update } from \"./update.js\";\r\nimport { persist } from \"./persist.js\";\r\nimport { setup } from \"./setup.js\";\r\n\r\nconst load = {\r\n    init(settings) {\r\n        settings = setup(settings);\r\n\r\n        let elements = settings.select\r\n            ? document.querySelectorAll(settings.select)\r\n            : document.querySelectorAll(\"select\");\r\n        let selects = [];\r\n\r\n        if (elements.length) {\r\n            [].forEach.call(elements, element => {\r\n                if (element.tagName == \"SELECT\") {\r\n                    selects.push(element);\r\n                } else\r\n                    console.warn(\r\n                        \"Optionbox warning: Your selection includes a <\" +\r\n                        element.tagName.toLowerCase() +\r\n                        \">. Only <select> elements can be converted to an optionbox\"\r\n                    );\r\n            });\r\n\r\n            this.create(selects);\r\n            update.listen(document.querySelectorAll(\".optionbox-radio\"), settings.persist);\r\n            this.clickAllSelected();\r\n        }\r\n    },\r\n\r\n    create(selects) {\r\n        selects.forEach(select => {\r\n            let optionsBox = document.createElement(\"span\");\r\n            let storedValue = persist.get(select.name);\r\n\r\n            optionsBox.classList.add(\"optionbox\");\r\n            optionsBox.innerHTML = this.replicate(\r\n                select.querySelectorAll(\"option\"),\r\n                select.name,\r\n                storedValue\r\n            );\r\n\r\n            select.insertAdjacentElement(\"beforebegin\", optionsBox);\r\n\r\n            select.selectedIndex = -1;\r\n            select.hidden = true;\r\n        });\r\n    },\r\n\r\n    replicate(options, name, storedValue) {\r\n        let content = \"\";\r\n\r\n        [].forEach.call(options, option => {\r\n            let selected = false;\r\n            if (storedValue === option.value) {\r\n                selected = true;\r\n            } else if (!storedValue && option.hasAttribute(\"selected\")) {\r\n                selected = true;\r\n            }\r\n\r\n            content += `\r\n                <label class=\"optionbox-item\">\r\n                <input\r\n                    type=\"radio\"\r\n                    class=\"optionbox-radio\"\r\n                    name=\"${name}-options\"\r\n                    data-optionbox-name=\"${name}\"\r\n                    data-optionbox-value=\"${option.value}\"\r\n                    checked=\"${selected}\">\r\n                ${option.innerHTML}\r\n                </label>`;\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    clickAllSelected() {\r\n        let checked = document.querySelectorAll(\r\n            \".optionbox-radio[checked=true]\"\r\n        );\r\n\r\n        [].forEach.call(checked, radio => {\r\n            radio.click();\r\n        });\r\n    }\r\n};\r\n\r\nexport { load };\r\n","const setup = settings => {\r\n    // defaults\r\n    let selector = \"select\";\r\n    let persistable = true;\r\n\r\n    // props provided\r\n    if (settings) {\r\n        if (settings.select !== undefined) {\r\n            selector = settings.select;\r\n        }\r\n        if (settings.persist !== undefined) {\r\n            persistable = settings.persist;\r\n        }\r\n    }\r\n\r\n    return {\r\n        select: selector,\r\n        persist: persistable\r\n    };\r\n};\r\n\r\nexport { setup };","import { load } from \"./modules/load\";\r\nwindow.optionbox = (settings) => load.init(settings);"],"names":["persist","Storage","name","value","this","storageExists","setItem","key","removeItem","sessionStorage","getItem","update","radios","persistable","forEach","call","onclick","change","radio","dataset","optionboxName","optionboxValue","optionItem","closest","optionBox","optionSiblings","querySelectorAll","select","document","querySelector","checked","store","close","selectedIndex","remove","open","classList","add","sibling","load","settings","selector","undefined","elements","selects","length","element","tagName","push","console","warn","toLowerCase","create","listen","clickAllSelected","optionsBox","createElement","storedValue","get","innerHTML","_this","replicate","insertAdjacentElement","hidden","options","content","selected","option","hasAttribute","click","window","optionbox","init"],"mappings":"yBAAA,IAAMA,EAAU,eACwB,oBAAbC,qBAEnBC,SACO,aAAeA,kBAGpBA,EAAMC,GACJC,KAAKC,8BACUC,QAAQF,KAAKG,IAAIL,GAAOC,oBAIxCD,GACCE,KAAKC,8BACUG,WAAWJ,KAAKG,IAAIL,kBAIvCA,MACIE,KAAKC,qBACEI,eAAeC,QAAQN,KAAKG,IAAIL,MCnB7CS,EAAS,iBACJC,EAAQC,iBACRC,QAAQC,KAAKH,EAAQ,cACdI,QAAU,aACPC,OAAOC,EAAOL,uBAKxBK,EAAOL,OACNX,EAAOgB,EAAMC,QAAQC,cACrBjB,EAAQe,EAAMC,QAAQE,eACtBC,EAAaJ,EAAMK,QAAQ,mBAC3BC,EAAYN,EAAMK,QAAQ,cAC1BE,EAAiBD,EAAUE,iBAC3B,kCAGAC,EAASC,SAASC,uBAAuB3B,OAEzCyB,EAAOxB,OAASA,KAETA,MAAQA,IACT2B,SAAU,EACZjB,KACQkB,MAAMJ,EAAOzB,KAAMyB,EAAOxB,YAEjC6B,MAAMV,EAAYE,EAAWC,OAG3BQ,eAAiB,IAClBH,SAAU,IACRI,OAAOP,EAAOzB,WACjBiC,KAAKb,EAAYE,oBAIxBF,EAAYE,EAAWC,KACdW,UAAUC,IAAI,cACfD,UAAUC,IAAI,aACrBvB,QAAQC,KAAKU,EAAgB,mBAC5Ba,EAAQf,QAAQ,SAASa,UAAUF,OAAO,6BAI7CZ,EAAYE,KACFY,UAAUF,OAAO,cAClBE,UAAUF,OAAO,YC7C7BK,EAAO,eACJC,GCLK,MAENC,EACA5B,EADA4B,EAAW,SACX5B,GAAc,KDGG2B,UCCOE,IAApBF,EAASb,WACEa,EAASb,aAECe,IAArBF,EAASxC,YACKwC,EAASxC,cDHvB2C,KCOD,QACKF,UACC5B,IDTec,OAClBC,SAASF,iBAAiBc,EAASb,QACnCC,SAASF,iBAAiB,UAC5BkB,EAAU,GAEVD,EAASE,YACN/B,QAAQC,KAAK4B,EAAU,YACC,UAAnBG,EAAQC,UACAC,KAAKF,GAEbG,QAAQC,KACJ,iDACAJ,EAAQC,QAAQI,cAChB,qEAIPC,OAAOR,KACLS,OAAOzB,SAASF,iBAAiB,oBAAqBc,EAASxC,cACjEsD,qCAINV,gBACK9B,QAAQ,gBACRyC,EAAa3B,SAAS4B,cAAc,QACpCC,EAAczD,EAAQ0D,IAAI/B,EAAOzB,QAE1BkC,UAAUC,IAAI,eACdsB,UAAYC,EAAKC,UACxBlC,EAAOD,iBAAiB,UACxBC,EAAOzB,KACPuD,KAGGK,sBAAsB,cAAeP,KAErCtB,eAAiB,IACjB8B,QAAS,wBAIdC,EAAS9D,EAAMuD,OACjBQ,EAAU,YAEXnD,QAAQC,KAAKiD,EAAS,gBACjBE,GAAW,EACXT,IAAgBU,EAAOhE,SACZ,GACHsD,GAAeU,EAAOC,aAAa,iBAChC,4LAQClE,yDACeA,kDACCiE,EAAOhE,yCACpB+D,yBACbC,EAAOR,yCAIVM,mCAIHnC,EAAUF,SAASF,iBACnB,qCAGDZ,QAAQC,KAAKe,EAAS,cACfuC,YElFlBC,OAAOC,UAAY,SAAC/B,UAAaD,EAAKiC,KAAKhC"}