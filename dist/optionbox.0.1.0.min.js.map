{"version":3,"file":"optionbox.0.1.0.min.js","sources":["../src/_get.js","../src/_create.js","../src/_update.js","../src/optionbox.js"],"sourcesContent":["const get = {\r\n    defaultConfig: {\r\n        persist: window.location.pathname,\r\n        prefix: \"optionbox-\",\r\n        select: \"select\"\r\n    },\r\n\r\n    config(userConfig) {\r\n        let config = Object.assign(this.defaultConfig, userConfig);\r\n\r\n        if (!this.storageExists()) {\r\n            config.persist = false;\r\n        }\r\n\r\n        return config;\r\n    },\r\n\r\n    storageExists() {\r\n        if (typeof Storage !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    selectElements(selector) {\r\n        let elements = document.querySelectorAll(selector);\r\n        let selects = [];\r\n\r\n        if (elements.length) {\r\n            [].forEach.call(elements, element => {\r\n                if (element.tagName === \"SELECT\") {\r\n                    selects.push(element);\r\n                } else\r\n                    console.warn(\r\n                        \"Optionbox warning: Your selection includes a <\" +\r\n                        element.tagName.toLowerCase() +\r\n                        \">. Only <select> elements can be converted to an optionbox\"\r\n                    );\r\n            });\r\n        }\r\n\r\n        return selects;\r\n    }\r\n};\r\n\r\nexport { get };","const create = {\r\n    optionboxes(config, selectElements) {\r\n        let optionboxElements = [];\r\n\r\n        selectElements.forEach(select => {\r\n            let prefix = config.prefix;\r\n            let name = select.name;\r\n            let classes = select.getAttribute(\"class\");\r\n            let styles = select.getAttribute(\"style\");\r\n            let storedValue = \"\";\r\n            let optionElements = select.querySelectorAll(\"option\");\r\n            let optionbox = document.createElement(\"span\");\r\n\r\n            if (config.persist) {\r\n                storedValue = sessionStorage[config.persist + \">\" + select.name];\r\n            }\r\n\r\n            optionbox.id = prefix + name;\r\n            classes != null && optionbox.setAttribute(\"class\", classes);\r\n            optionbox.classList.add(prefix);\r\n            styles != null && optionbox.setAttribute(\"style\", styles);\r\n            optionbox.innerHTML = this.options(optionElements, name, storedValue, prefix);\r\n\r\n            select.insertAdjacentElement(\"beforebegin\", optionbox);\r\n\r\n            select.selectedIndex = -1;\r\n            select.hidden = true;\r\n\r\n            optionboxElements.push(optionbox);\r\n        });\r\n\r\n        return (optionboxElements);\r\n    },\r\n\r\n    options(optionElements, name, storedValue, prefix) {\r\n        let content = `<div class=${prefix}container>`;\r\n\r\n        [].forEach.call(optionElements, option => {\r\n            let selected = this.preselected(storedValue, option);\r\n            let alt = option.getAttribute(\"alt\");\r\n            let classes = option.getAttribute(\"class\");\r\n            let styles = option.getAttribute(\"style\");\r\n\r\n            content += `\r\n                    <label \r\n                        class=\"${prefix}item ${classes != null ? classes : \"\"}\"\r\n                        style=\"${styles != null ? styles : \"\"}\"\r\n                        for=\"${prefix}${name}-${option.value}\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"${prefix}radio\"\r\n                        id=\"${prefix}${name}-${option.value}\"\r\n                        name=\"${prefix}${name}\"\r\n                        value=\"${option.value}\"\r\n                        checked=\"${selected}\">\r\n                        ${option.innerHTML}`;\r\n\r\n            if (alt) {\r\n                content += `<small class=\"${prefix}alt\">${alt}</small>`;\r\n            }\r\n\r\n            content += \"</label>\";\r\n        });\r\n\r\n        content += \"</div>\";\r\n\r\n        return content;\r\n    },\r\n\r\n    preselected(storedValue, option) {\r\n        if (storedValue === option.value) {\r\n            return true;\r\n        } else if (!storedValue && option.hasAttribute(\"selected\")) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { create };","const update = {\r\n    listen(config, optionboxes) {\r\n        optionboxes.forEach(optionbox => {\r\n            optionbox.addEventListener(\"click\", e => { // Delegated event listener avoids performance issues of listeneing to every option\r\n                if (e.target && e.target.tagName === \"INPUT\") {\r\n                    this.change(e.target, config);\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    change(radio, config) {\r\n        let prefix = config.prefix;\r\n        let optionbox = radio.closest(\".\" + prefix);\r\n        let name = optionbox.id.replace(prefix, \"\");\r\n        let value = radio.value;\r\n        let optionItem = radio.closest(\"label\");\r\n        let optionSiblings = optionbox.querySelectorAll(\r\n            \"._optionbox-radio:not(:checked)\"\r\n        );\r\n\r\n        let select = document.querySelector(`[name=\"${name}\"]`);\r\n        let key = config.persist + \">\" + select.name;\r\n\r\n        if (select.value != value) { // select if not previously selected\r\n            select.value = value;\r\n            radio.checked = true;\r\n            this.store(config, select, key);\r\n            this.close(optionItem, optionbox, optionSiblings);\r\n        } else { // deselect if previously selected\r\n            select.selectedIndex = -1;\r\n            radio.checked = false;\r\n            this.remove(config, key);\r\n            this.open(optionItem, optionbox);\r\n        }\r\n    },\r\n\r\n    close(optionItem, optionbox, optionSiblings) {\r\n        optionItem.classList.add(\"selected\");\r\n        optionbox.classList.add(\"closed\");\r\n        [].forEach.call(optionSiblings, sibling =>\r\n            sibling.closest(\"label\").classList.remove(\"selected\")\r\n        );\r\n    },\r\n\r\n    open(optionItem, optionbox) {\r\n        optionItem.classList.remove(\"selected\");\r\n        optionbox.classList.remove(\"closed\");\r\n    },\r\n\r\n    init(optionboxes) {\r\n        optionboxes.forEach(optionbox => {\r\n            let preselects = optionbox.querySelectorAll(\"[checked=true]\");\r\n\r\n            [].forEach.call(preselects, preselect => {\r\n                preselect.click();\r\n            });\r\n        });\r\n    },\r\n\r\n    store(config, select, key) {\r\n        if (config.persist) {\r\n            sessionStorage[key] = select.value;\r\n        }\r\n    },\r\n\r\n    remove(config, key) {\r\n        if (config.persist) {\r\n            delete sessionStorage[key];\r\n        }\r\n    }\r\n};\r\n\r\nexport { update };\r\n","import { get } from \"./_get.js\";\r\nimport { create } from \"./_create.js\";\r\nimport { update } from \"./_update.js\";\r\n\r\nwindow.optionbox = (userConfig) => {\r\n    let config = get.config(userConfig);\r\n    let selectElements = get.selectElements(config.select);\r\n\r\n    let optionboxes = create.optionboxes(config, selectElements);\r\n\r\n    update.listen(config, optionboxes);\r\n    update.init(optionboxes);\r\n};"],"names":["get","window","location","pathname","userConfig","config","Object","assign","this","defaultConfig","storageExists","persist","undefined","Storage","selector","elements","document","querySelectorAll","selects","length","forEach","call","element","tagName","push","console","warn","toLowerCase","create","selectElements","optionboxElements","prefix","name","select","classes","getAttribute","styles","storedValue","optionElements","optionbox","createElement","sessionStorage","id","setAttribute","classList","add","innerHTML","_this","options","insertAdjacentElement","selectedIndex","hidden","content","selected","_this2","preselected","option","alt","value","hasAttribute","update","optionboxes","addEventListener","e","target","change","radio","closest","replace","optionItem","optionSiblings","querySelector","key","checked","store","close","remove","open","sibling","preselects","click","listen","init"],"mappings":"yOAAMA,EAAM,eACO,SACFC,OAAOC,SAASC,gBACjB,oBACA,0BAGLC,OACCC,EAASC,OAAOC,OAAOC,KAAKC,cAAeL,UAE1CI,KAAKE,oBACCC,SAAU,GAGdN,wCAIgBO,yBAAZC,sBAAAA,mCAOAC,OACPC,EAAWC,SAASC,iBAAiBH,GACrCI,EAAU,UAEVH,EAASI,WACNC,QAAQC,KAAKN,EAAU,YACE,WAApBO,EAAQC,UACAC,KAAKF,GAEbG,QAAQC,KACJ,iDACAJ,EAAQC,QAAQI,cAChB,gEAKTT,IC1CTU,EAAS,sBACCvB,EAAQwB,cACZC,EAAoB,YAETV,QAAQ,gBACfW,EAAS1B,EAAO0B,OAChBC,EAAOC,EAAOD,KACdE,EAAUD,EAAOE,aAAa,SAC9BC,EAASH,EAAOE,aAAa,SAC7BE,EAAc,GACdC,EAAiBL,EAAOhB,iBAAiB,UACzCsB,EAAYvB,SAASwB,cAAc,QAEnCnC,EAAOM,YACO8B,eAAepC,EAAOM,QAAU,IAAMsB,EAAOD,SAGrDU,GAAKX,EAASC,EACb,SAAQO,EAAUI,aAAa,QAAST,KACzCU,UAAUC,IAAId,GACd,SAAQQ,EAAUI,aAAa,QAASP,KACxCU,UAAYC,EAAKC,QAAQV,EAAgBN,EAAMK,EAAaN,KAE/DkB,sBAAsB,cAAeV,KAErCW,eAAiB,IACjBC,QAAS,IAEE3B,KAAKe,KAGnBT,oBAGJQ,EAAgBN,EAAMK,EAAaN,cACnCqB,gBAAwBrB,wBAEzBX,QAAQC,KAAKiB,EAAgB,gBACxBe,EAAWC,EAAKC,YAAYlB,EAAamB,GACzCC,EAAMD,EAAOrB,aAAa,OAC1BD,EAAUsB,EAAOrB,aAAa,SAC9BC,EAASoB,EAAOrB,aAAa,6EAIZJ,WAAyB,MAAXG,EAAkBA,EAAU,0CAChC,MAAVE,EAAiBA,EAAS,uCAC5BL,EAASC,MAAQwB,EAAOE,8GAGtB3B,yCACHA,EAASC,MAAQwB,EAAOE,0CACtB3B,EAASC,uCACRwB,EAAOE,6CACLL,iCACTG,EAAOV,UAEjBW,wBAC4B1B,UAAc0B,iBAGnC,gBAGJ,+BAKHpB,EAAamB,UACjBnB,IAAgBmB,EAAOE,SAEfrB,IAAemB,EAAOG,aAAa,eCxEjDC,EAAS,iBACJvD,EAAQwD,gBACCzC,QAAQ,cACN0C,iBAAiB,QAAS,YAC5BC,EAAEC,QAA+B,UAArBD,EAAEC,OAAOzC,WAChB0C,OAAOF,EAAEC,OAAQ3D,wBAM/B6D,EAAO7D,OACN0B,EAAS1B,EAAO0B,OAChBQ,EAAY2B,EAAMC,QAAQ,IAAMpC,GAChCC,EAAOO,EAAUG,GAAG0B,QAAQrC,EAAQ,IACpC2B,EAAQQ,EAAMR,MACdW,EAAaH,EAAMC,QAAQ,SAC3BG,EAAiB/B,EAAUtB,iBAC3B,mCAGAgB,EAASjB,SAASuD,wBAAwBvC,QAC1CwC,EAAMnE,EAAOM,QAAU,IAAMsB,EAAOD,KAEpCC,EAAOyB,OAASA,KACTA,MAAQA,IACTe,SAAU,OACXC,MAAMrE,EAAQ4B,EAAQuC,QACtBG,MAAMN,EAAY9B,EAAW+B,OAE3BpB,eAAiB,IAClBuB,SAAU,OACXG,OAAOvE,EAAQmE,QACfK,KAAKR,EAAY9B,oBAIxB8B,EAAY9B,EAAW+B,KACd1B,UAAUC,IAAI,cACfD,UAAUC,IAAI,aACrBzB,QAAQC,KAAKiD,EAAgB,mBAC5BQ,EAAQX,QAAQ,SAASvB,UAAUgC,OAAO,6BAI7CP,EAAY9B,KACFK,UAAUgC,OAAO,cAClBhC,UAAUgC,OAAO,yBAG1Bf,KACWzC,QAAQ,gBACZ2D,EAAaxC,EAAUtB,iBAAiB,qBAEzCG,QAAQC,KAAK0D,EAAY,cACdC,4BAKhB3E,EAAQ4B,EAAQuC,GACdnE,EAAOM,yBACQ6D,GAAOvC,EAAOyB,wBAI9BrD,EAAQmE,GACPnE,EAAOM,gBACA8B,eAAe+B,KChElCvE,OAAOsC,UAAY,SAACnC,OACZC,EAASL,EAAIK,OAAOD,GACpByB,EAAiB7B,EAAI6B,eAAexB,EAAO4B,QAE3C4B,EAAcjC,EAAOiC,YAAYxD,EAAQwB,KAEtCoD,OAAO5E,EAAQwD,KACfqB,KAAKrB"}