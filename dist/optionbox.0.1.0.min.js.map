{"version":3,"file":"optionbox.0.1.0.min.js","sources":["../src/_get.js","../src/_create.js","../src/_update.js","../src/optionbox.js"],"sourcesContent":["const get = {\r\n    defaultConfig: {\r\n        persist: true,\r\n        prefix: \"_optionbox\",\r\n        select: \"select\"\r\n    },\r\n\r\n    config(userConfig) {\r\n        let mergedConfig = Object.assign(this.defaultConfig, userConfig);\r\n\r\n        if (mergedConfig.persist) {\r\n            mergedConfig.persist = this.storageExists();\r\n        }\r\n\r\n        return mergedConfig;\r\n    },\r\n\r\n    storageExists() {\r\n        if (typeof Storage !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    storedValues(config) {\r\n        if (config.persist) {\r\n            return sessionStorage.getItem(config.prefix);\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n    selectElements(selector) {\r\n        let elements = document.querySelectorAll(selector);\r\n        let selects = [];\r\n\r\n        if (elements.length) {\r\n            [].forEach.call(elements, element => {\r\n                if (element.tagName === \"SELECT\") {\r\n                    selects.push(element);\r\n                } else\r\n                    console.warn(\r\n                        \"Optionbox warning: Your selection includes a <\" +\r\n                        element.tagName.toLowerCase() +\r\n                        \">. Only <select> elements can be converted to an optionbox\"\r\n                    );\r\n            });\r\n        }\r\n\r\n        return selects;\r\n    }\r\n};\r\n\r\nexport { get };","const create = {\r\n    optionboxes(config, storedValues, selectElements) {\r\n        let optionboxElements = [];\r\n\r\n        selectElements.forEach(select => {\r\n            let prefix = config.prefix;\r\n            let name = select.name;\r\n            let classes = select.getAttribute(\"class\");\r\n            let styles = select.getAttribute(\"style\");\r\n            let storedValue = \"\";\r\n            let optionElements = select.querySelectorAll(\"option\");\r\n            let optionbox = document.createElement(\"span\");\r\n\r\n            if (storedValues) {\r\n                storedValue = storedValues[name];\r\n            }\r\n\r\n            optionbox.id = name + prefix;\r\n            optionbox.setAttribute(\"class\", classes);\r\n            optionbox.classList.add(prefix);\r\n            optionbox.setAttribute(\"style\", styles);\r\n            optionbox.innerHTML = this.options(optionElements, name, storedValue, prefix);\r\n\r\n            select.insertAdjacentElement(\"beforebegin\", optionbox);\r\n\r\n            select.selectedIndex = -1;\r\n            select.hidden = true;\r\n\r\n            optionboxElements.push(optionbox);\r\n        });\r\n\r\n        return (optionboxElements);\r\n    },\r\n\r\n    options(optionElements, name, storedValue, prefix) {\r\n        let content = \"\";\r\n\r\n        [].forEach.call(optionElements, option => {\r\n            let selected = this.preselected(storedValue, option);\r\n            let alt = option.getAttribute(\"alt\");\r\n            let classes = option.getAttribute(\"class\");\r\n            let styles = option.getAttribute(\"style\");\r\n            console.log(classes);\r\n            console.log(styles);\r\n\r\n            content += `\r\n                    <label \r\n                        class=\"${prefix}-item ${classes}\"\r\n                        style=\"${styles}\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"${prefix}-radio\"\r\n                        name=\"${name + prefix}\"\r\n                        value=\"${option.value}\"\r\n                        checked=\"${selected}\">\r\n                        ${option.innerHTML}`;\r\n\r\n            if (alt) {\r\n                content += `<small class=\"${prefix}-alt\">${alt}</small>`;\r\n            }\r\n\r\n            content += \"</label>\";\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    preselected(storedValue, option) {\r\n        if (storedValue === option.value) {\r\n            return true;\r\n        } else if (!storedValue && option.hasAttribute(\"selected\")) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { create };","const update = {\r\n    listen(config, optionboxes) {\r\n        optionboxes.forEach(optionbox => {\r\n            optionbox.addEventListener(\"click\", e => { // Delegated event listener avoids performance issues of listeneing to every option\r\n                if (e.target && e.target.tagName === \"INPUT\") {\r\n                    this.change(e.target, config);\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    change(radio, config) {\r\n        let prefix = config.prefix;\r\n        let optionbox = radio.closest(\".\" + prefix);\r\n        let name = optionbox.id.replace(prefix, \"\");\r\n        let value = radio.value;\r\n        let optionItem = radio.closest(\".\" + prefix + \"-item\");\r\n        let optionSiblings = optionbox.querySelectorAll(\r\n            \"._optionbox-radio:not(:checked)\"\r\n        );\r\n\r\n        let select = document.querySelector(`[name=${name}]`);\r\n\r\n        if (select.value != value) { // select if not previously selected\r\n            select.value = value;\r\n            radio.checked = true;\r\n            this.store(config, select);\r\n            this.close(optionItem, optionbox, optionSiblings);\r\n        } else { // deselect if previously selected\r\n            select.selectedIndex = -1;\r\n            radio.checked = false;\r\n            this.remove(config, select);\r\n            this.open(optionItem, optionbox);\r\n        }\r\n    },\r\n\r\n    close(optionItem, optionbox, optionSiblings) {\r\n        optionItem.classList.add(\"selected\");\r\n        optionbox.classList.add(\"closed\");\r\n        [].forEach.call(optionSiblings, sibling =>\r\n            sibling.closest(\"label\").classList.remove(\"selected\")\r\n        );\r\n    },\r\n\r\n    open(optionItem, optionbox) {\r\n        optionItem.classList.remove(\"selected\");\r\n        optionbox.classList.remove(\"closed\");\r\n    },\r\n\r\n    init(optionboxes) {\r\n        optionboxes.forEach(optionbox => {\r\n            let preselects = optionbox.querySelectorAll(\"[checked=true]\");\r\n\r\n            [].forEach.call(preselects, preselect => {\r\n                preselect.click();\r\n            });\r\n        });\r\n    },\r\n\r\n    store(config, select) {\r\n        if (config.persist) {\r\n            sessionStorage.setItem(config.prefix + \"-\" + select.name, select.value);\r\n        }\r\n    },\r\n\r\n    remove(config, select) {\r\n        if (config.persist) {\r\n            sessionStorage.removeItem(config.prefix + \"-\" + select.name);\r\n        }\r\n    }\r\n};\r\n\r\nexport { update };\r\n","import { get } from \"./_get.js\";\r\nimport { create } from \"./_create.js\";\r\nimport { update } from \"./_update.js\";\r\n\r\nwindow.optionbox = (userConfig) => {\r\n    let config = get.config(userConfig);\r\n    let storedValues = get.storedValues(config);\r\n    let selectElements = get.selectElements(config.select);\r\n\r\n    let optionboxes = create.optionboxes(config, storedValues, selectElements);\r\n\r\n    update.listen(config, optionboxes);\r\n    update.init(optionboxes);\r\n};"],"names":["get","userConfig","mergedConfig","Object","assign","this","defaultConfig","persist","storageExists","undefined","Storage","config","sessionStorage","getItem","prefix","selector","elements","document","querySelectorAll","selects","length","forEach","call","element","tagName","push","console","warn","toLowerCase","create","storedValues","selectElements","optionboxElements","name","select","classes","getAttribute","styles","storedValue","optionElements","optionbox","createElement","id","setAttribute","classList","add","innerHTML","_this","options","insertAdjacentElement","selectedIndex","hidden","content","selected","_this2","preselected","option","alt","log","value","hasAttribute","update","optionboxes","addEventListener","e","target","change","radio","closest","replace","optionItem","optionSiblings","querySelector","checked","store","close","remove","open","sibling","preselects","click","setItem","removeItem","window","listen","init"],"mappings":"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"}