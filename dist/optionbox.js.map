{"version":3,"file":"optionbox.js","sources":["../src/ts/_get.ts","../src/ts/_create.ts","../src/ts/_update.ts","../src/ts/optionbox.ts"],"sourcesContent":["const get = {\r\n    defaultConfig: {\r\n        persist: window.location.pathname,\r\n        prefix: 'optionbox-',\r\n        select: 'select:not([multiple])'\r\n    },\r\n\r\n    config(userConfig) {\r\n        let config = (<any>Object).assign(this.defaultConfig, userConfig);\r\n\r\n        if (!this.storageExists()) {\r\n            config.persist = false;\r\n        }\r\n\r\n        return config;\r\n    },\r\n\r\n    storageExists() {\r\n        if (typeof Storage !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    selectElements(selector) {\r\n        let elements = document.querySelectorAll(selector);\r\n        let selects = [];\r\n\r\n        if (elements.length) {\r\n            [].forEach.call(elements, element => {\r\n                if (element.tagName === 'SELECT') {\r\n                    selects.push(element);\r\n                } else\r\n                    console.warn(\r\n                        'Optionbox warning: Your selection includes a <' +\r\n                        element.tagName.toLowerCase() +\r\n                        '>. Only <select> elements can be converted to an optionbox'\r\n                    );\r\n            });\r\n        }\r\n\r\n        return selects;\r\n    }\r\n};\r\n\r\nexport { get };","const create = {\r\n    optionboxes(config, selectElements) {\r\n        let optionboxElements = [];\r\n\r\n        selectElements.forEach(select => {\r\n            let prefix = config.prefix;\r\n            let name = select.name;\r\n            let classes = select.getAttribute('class');\r\n            let styles = select.getAttribute('style');\r\n            let storedValue = '';\r\n            let optgroupElements = select.querySelectorAll('optgroup');\r\n            let optionElements = select.querySelectorAll('option');\r\n            let optionbox = document.createElement('span');\r\n            let content = `<div class=${prefix}container>`;\r\n\r\n            if (config.persist) {\r\n                storedValue = sessionStorage[config.persist + '>' + select.name];\r\n            }\r\n\r\n            optionbox.id = prefix + name;\r\n            classes != null && optionbox.setAttribute('class', classes);\r\n            optionbox.classList.add(prefix);\r\n            styles != null && optionbox.setAttribute('style', styles);\r\n\r\n\r\n            if (optgroupElements.length) {\r\n                content += this.optgroups(optgroupElements, name, storedValue, prefix);\r\n            } else {\r\n                content += this.options(optionElements, name, storedValue, prefix);\r\n            }\r\n\r\n            content += '</div>';\r\n\r\n            optionbox.innerHTML = content;\r\n\r\n            select.insertAdjacentElement('beforebegin', optionbox);\r\n\r\n            select.selectedIndex = -1;\r\n            select.remove();\r\n\r\n            optionboxElements.push(optionbox);\r\n        });\r\n\r\n        return (optionboxElements);\r\n    },\r\n\r\n    optgroups(optgroupElements, name, storedValue, prefix) {\r\n        let content = '';\r\n\r\n        [].forEach.call(optgroupElements, optgroup => {\r\n            let label = optgroup.getAttribute('label');\r\n            let classes = optgroup.getAttribute('class');\r\n            let styles = optgroup.getAttribute('style');\r\n            let optionElements = optgroup.querySelectorAll('option');\r\n\r\n            content += `<div \r\n                class=\"${prefix}group ${classes != null ? classes : ''}\"\r\n                style=\"${styles != null ? styles : ''}\">`;\r\n\r\n            if (label) content += `<small class=\"${prefix}group-label\">${label}</small>`;\r\n\r\n            content += this.options(optionElements, name, storedValue, prefix);\r\n\r\n            content += '</div>';\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    options(optionElements, name, storedValue, prefix) {\r\n        let content = '';\r\n\r\n        [].forEach.call(optionElements, option => {\r\n            let value = option.value;\r\n            let label = option.innerHTML;\r\n            let alt = option.getAttribute('alt');\r\n            let classes = option.getAttribute('class');\r\n            let styles = option.getAttribute('style');\r\n            let selected = this.preselected(storedValue, option);\r\n\r\n            content += `\r\n                    <label \r\n                        class=\"${prefix}item ${classes != null ? classes : ''}\"\r\n                        style=\"${styles != null ? styles : ''}\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"${prefix}radio\"\r\n                        name=\"${name}\"\r\n                        value=\"${value}\"\r\n                        checked=\"${selected}\">\r\n                        ${label}`;\r\n\r\n            if (alt) {\r\n                content += `<small class=\"${prefix}alt\">${alt}</small>`;\r\n            }\r\n\r\n            content += '</label>';\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    preselected(storedValue, option) {\r\n        if (storedValue === option.value) {\r\n            return true;\r\n        } else if (!storedValue && option.hasAttribute('selected')) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { create };","const update = {\r\n    listen(config, optionboxes) {\r\n        optionboxes.forEach(optionbox => {\r\n            optionbox.addEventListener('click', e => { // Delegated event listener avoids performance issues of listeneing to every option\r\n                if (e.target && e.target.tagName === 'INPUT') {\r\n                    this.change(e.target, config);\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    change(radio, config) {\r\n        let prefix = config.prefix;\r\n        let name = radio.name;\r\n        let key = config.persist + '>' + name;\r\n        let value = radio.value;\r\n        let optionItem = radio.closest('label');\r\n        let optionbox = radio.closest('.' + prefix);\r\n\r\n        if (optionItem.classList.contains('selected')) {\r\n            radio.checked = false;\r\n            this.remove(config, key);\r\n            this.open(optionItem, optionbox);\r\n        } else {\r\n            radio.checked = true;\r\n            this.store(config, key, value);\r\n            this.close(optionItem, optionbox);\r\n        }\r\n    },\r\n\r\n    close(optionItem, optionbox) {\r\n        let optionSiblings = optionbox.querySelectorAll(\r\n            '._optionbox-radio:not(:checked)'\r\n        );\r\n\r\n        optionItem.classList.add('selected');\r\n        optionbox.classList.add('closed');\r\n        [].forEach.call(optionSiblings, sibling =>\r\n            sibling.closest('label').classList.remove('selected')\r\n        );\r\n    },\r\n\r\n    open(optionItem, optionbox) {\r\n        optionItem.classList.remove('selected');\r\n        optionbox.classList.remove('closed');\r\n    },\r\n\r\n    init(optionboxes) {\r\n        optionboxes.forEach(optionbox => {\r\n            let preselects = optionbox.querySelectorAll('[checked=true]');\r\n\r\n            [].forEach.call(preselects, preselect => {\r\n                preselect.click();\r\n            });\r\n        });\r\n    },\r\n\r\n    store(config, key, value) {\r\n        if (config.persist) {\r\n            sessionStorage[key] = value;\r\n        }\r\n    },\r\n\r\n    remove(config, key) {\r\n        if (config.persist) {\r\n            delete sessionStorage[key];\r\n        }\r\n    }\r\n};\r\n\r\nexport { update };\r\n","import { get } from './_get';\r\nimport { create } from './_create';\r\nimport { update } from './_update';\r\n\r\n(<any>window).optionbox = (userConfig) => {\r\n    let config = get.config(userConfig);\r\n    let selectElements = get.selectElements(config.select);\r\n\r\n    let optionboxes = create.optionboxes(config, selectElements);\r\n\r\n    update.listen(config, optionboxes);\r\n    update.init(optionboxes);\r\n};"],"names":[],"mappings":"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"}