{"version":3,"file":"optionbox.min.js","sources":["../src/modules/core.js","../src/main.js"],"sourcesContent":["const core = {\r\n    init(selector) {\r\n        let elements = selector\r\n            ? document.querySelectorAll(selector)\r\n            : document.querySelectorAll(\"select\");\r\n        let selects = [];\r\n        if (elements.length) {\r\n            [].forEach.call(elements, element => {\r\n                if (element.tagName == \"SELECT\") {\r\n                    selects.push(element);\r\n                } else\r\n                    console.warn(\r\n                        \"Optionbox warning: Your selection includes a <\" +\r\n                            element.tagName.toLowerCase() +\r\n                            \">. Only <select> elements can be converted to an optionbox\"\r\n                    );\r\n            });\r\n            this.create(selects);\r\n            this.listen(document.querySelectorAll(\".optionbox-radio\"));\r\n            this.preselect();\r\n        }\r\n    },\r\n\r\n    create(selects) {\r\n        selects.forEach(select => {\r\n            let optionsBox = document.createElement(\"span\");\r\n\r\n            optionsBox.classList.add(\"optionbox\");\r\n            optionsBox.innerHTML = this.replicate(\r\n                select.querySelectorAll(\"option\"),\r\n                select.name\r\n            );\r\n\r\n            select.insertAdjacentElement(\"beforebegin\", optionsBox);\r\n\r\n            select.selectedIndex = -1;\r\n            select.hidden = true;\r\n        });\r\n    },\r\n\r\n    replicate(options, name) {\r\n        let content = \"\";\r\n\r\n        [].forEach.call(options, option => {\r\n            content += `\r\n        <label class=\"optionbox-item\">\r\n          <input\r\n            type=\"radio\"\r\n            class=\"optionbox-radio\"\r\n            name=\"${name}-options\"\r\n            data-optionbox-name=\"${name}\"\r\n            data-optionbox-value=\"${option.value}\"\r\n            checked=\"${option.hasAttribute(\"selected\")}\">\r\n          ${option.innerHTML}\r\n        </label>`;\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    listen(radios) {\r\n        [].forEach.call(radios, radio => {\r\n            radio.onclick = () => {\r\n                let name = radio.dataset.optionboxName;\r\n                let value = radio.dataset.optionboxValue;\r\n                this.select(radio, name, value);\r\n            };\r\n        });\r\n    },\r\n\r\n    select(radio, name, value) {\r\n        let select = document.querySelector(`[name=${name}]`);\r\n        let optionItem = radio.closest(\".optionbox-item\");\r\n        let optionsBox = radio.closest(\".optionbox\");\r\n        let optionSiblings = optionsBox.querySelectorAll(\r\n            \".optionbox-radio:not(:checked)\"\r\n        );\r\n\r\n        if (select.value != value) {\r\n            // select if not previously selected\r\n            select.value = value;\r\n            optionItem.classList.add(\"selected\");\r\n            optionsBox.classList.add(\"closed\");\r\n            [].forEach.call(optionSiblings, sibling =>\r\n                sibling.closest(\"label\").classList.remove(\"selected\")\r\n            );\r\n        } else {\r\n            // deselect if previously selected\r\n            select.selectedIndex = -1;\r\n            radio.checked = false;\r\n            optionItem.classList.remove(\"selected\");\r\n            optionsBox.classList.remove(\"closed\");\r\n        }\r\n    },\r\n\r\n    preselect() {\r\n        let checked = document.querySelectorAll(\r\n            \".optionbox-radio[checked=true]\"\r\n        );\r\n        [].forEach.call(checked, radio => {\r\n            radio.click();\r\n        });\r\n    }\r\n};\r\n\r\nexport { core };\r\n","import { core } from \"./modules/core\";\r\n\r\ncore.init();\r\n"],"names":["selector","elements","document","querySelectorAll","selects","length","forEach","call","element","tagName","push","console","warn","toLowerCase","create","listen","preselect","optionsBox","createElement","classList","add","innerHTML","_this","replicate","select","name","insertAdjacentElement","selectedIndex","hidden","options","content","option","value","hasAttribute","radios","onclick","radio","dataset","optionboxName","optionboxValue","querySelector","optionItem","closest","optionSiblings","sibling","remove","checked","click","init"],"mappings":"0BAAa,eACJA,OACGC,EAAWD,EACTE,SAASC,iBAAiBH,GAC1BE,SAASC,iBAAiB,UAC5BC,EAAU,GACVH,EAASI,YACNC,QAAQC,KAAKN,EAAU,YACC,UAAnBO,EAAQC,UACAC,KAAKF,GAEbG,QAAQC,KACJ,iDACIJ,EAAQC,QAAQI,cAChB,qEAGXC,OAAOV,QACPW,OAAOb,SAASC,iBAAiB,0BACjCa,8BAINZ,gBACKE,QAAQ,gBACRW,EAAaf,SAASgB,cAAc,UAE7BC,UAAUC,IAAI,eACdC,UAAYC,EAAKC,UACxBC,EAAOrB,iBAAiB,UACxBqB,EAAOC,QAGJC,sBAAsB,cAAeT,KAErCU,eAAiB,IACjBC,QAAS,wBAIdC,EAASJ,OACXK,EAAU,YAEXxB,QAAQC,KAAKsB,EAAS,+JAMbJ,iDACeA,0CACCM,EAAOC,iCACpBD,EAAOE,aAAa,6BAC/BF,EAAOV,iCAIJS,mBAGJI,iBACA5B,QAAQC,KAAK2B,EAAQ,cACdC,QAAU,eACRV,EAAOW,EAAMC,QAAQC,cACrBN,EAAQI,EAAMC,QAAQE,iBACrBf,OAAOY,EAAOX,EAAMO,uBAK9BI,EAAOX,EAAMO,OACZR,EAAStB,SAASsC,uBAAuBf,OACzCgB,EAAaL,EAAMM,QAAQ,mBAC3BzB,EAAamB,EAAMM,QAAQ,cAC3BC,EAAiB1B,EAAWd,iBAC5B,kCAGAqB,EAAOQ,OAASA,KAETA,MAAQA,IACJb,UAAUC,IAAI,cACdD,UAAUC,IAAI,aACtBd,QAAQC,KAAKoC,EAAgB,mBAC5BC,EAAQF,QAAQ,SAASvB,UAAU0B,OAAO,kBAIvClB,eAAiB,IAClBmB,SAAU,IACL3B,UAAU0B,OAAO,cACjB1B,UAAU0B,OAAO,qCAK5BC,EAAU5C,SAASC,iBACnB,qCAEDG,QAAQC,KAAKuC,EAAS,cACfC,aClGbC"}